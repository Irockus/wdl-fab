set(IPC_SA   app_wrapper/app_dlg_main.cpp ../../WDL/IPlug/IPlugStandalone.cpp)
set(IPC_AU   ../../WDL/IPlug/IPlugAU.cpp)
set(IPC_VST	 ../../WDL/IPlug/IPlugVST.cpp)
set(IPC_VST3 ../../WDL/IPlug/IPlugVST3.cpp)
set(IPC_RTAS ../../WDL/IPlug/IPlugRTAS.cpp)
set(IPC_AAX  ../../WDL/IPlug/IPlugAAX.cpp)

if(WIN32)
 set (IPLUG_LIBS ${IPLUG_LIBS} asio)
elseif(APPLE)

 find_library(AUDIO_UNIT AudioUnit)
 if (NOT AUDIO_UNIT)
    message(FATAL_ERROR "AudioUnit not found")
 endif()
 
 find_library(CARBON Carbon)
 find_library(COCOA Cocoa)
 find_library(CORE_FND CoreFoundation)
 find_library(CORE_SVCS CoreServices)
 find_library(CORE_MIDI CoreMidi)
 find_library(CORE_AUDIO CoreAudio)
 find_library(APPKIT AppKit)

  set (OSX_FMWKS ${AUDIO_UNIT} ${COCOA} ${CARBON} ${CORE_FND} ${CORE_SVCS} ${CORE_MIDI} ${CORE_AUDIO} ${APPKIT} )

endif(WIN32)

MACRO(create_example name)
	set (PLUGNAME ${ARGV0})
	set (PN_SRC ${PLUGNAME}_SRC )
	set (PN_HDR ${PLUGNAME}_HDR )
	
	# Source code to build
	set(${PN_SRC} ${${PN_SRC}}   ${PLUGNAME}.cpp )
	if(WIN32)
	  set(${PN_SRC} ${${PN_SRC}} ${PLUGNAME}.rc)
	else(WIN32)
	  set(${PN_SRC} ${${PN_SRC}}  ../../WDL/IPlug/IPlugCocoa.mm)
	endif(WIN32)

	# Source code headers
	set(${PN_HDR} ${${PN_HDR}} resource.h ${PLUGNAME}.h  )
	 
	set (PLUGNAMEVST  ${PLUGNAME}VST)
#	set (PLUGNAMEVST3 ${PLUGNAME}VST3)
	set (PLUGNAMEAU   ${PLUGNAME}AU)
#	set (PLUGNAMEAAX  ${PLUGNAME}AAX)
#	set (PLUGNAMERTAS  ${PLUGNAME}RTAS)

	#Build Executable 
	add_executable(${PLUGNAME} ${${PN_SRC}} ${${PN_HDR}} ${IPC_SA}  ) 
	target_link_libraries(${PLUGNAME} wdl lice iplug jnet eel plush rtam png zlib ${IPLUG_LIBS}  ${OSX_FMWKS} )
	set_target_properties(${PLUGNAME}     PROPERTIES COMPILE_DEFINITIONS "SA_API=1")
	
	if( DEFINED PLUGNAMEVST )
		add_library(${PLUGNAMEVST} SHARED ${${PN_SRC}} ${${PN_HDR}} ${IPC_VST} )
		target_link_libraries(${PLUGNAMEVST} wdl lice iplug jnet eel plush rtam png zlib ${IPLUG_LIBS}  ${OSX_FMWKS} )
		set_target_properties(${PLUGNAMEVST}  PROPERTIES COMPILE_DEFINITIONS "VST_API=1")
	endif()

	if( DEFINED PLUGNAMEVST3 )
		add_library(${PLUGNAMEVST3} SHARED ${${PN_SRC}} ${${PN_HDR}} ${IPC_VST3} )
		target_link_libraries(${PLUGNAMEVST3} wdl lice iplug vst3 jnet eel plush rtam png zlib ${IPLUG_LIBS}  ${OSX_FMWKS} )
		set_target_properties(${PLUGNAMEVST3} PROPERTIES COMPILE_DEFINITIONS "VST3_API=1")
	endif()
	
	if( DEFINED PLUGNAMERTAS )
		add_library(${PLUGNAMERTAS} SHARED ${${PN_SRC}} ${${PN_HDR}} ${IPC_RTAS} )
		target_link_libraries(${PLUGNAMERTAS} wdl lice iplug jnet eel plush rtam png zlib ${IPLUG_LIBS}  ${OSX_FMWKS} )
		set_target_properties(${PLUGNAMERTAS} PROPERTIES COMPILE_DEFINITIONS "RTAS_API=1")
	endif()
	
	if( DEFINED PLUGNAMEAAX )
		add_library(${PLUGNAMEAAX} SHARED ${${PN_SRC}} ${${PN_HDR}} ${IPC_AAX} )
		target_link_libraries(${PLUGNAMEAAX} wdl lice iplug jnet eel plush rtam png zlib ${IPLUG_LIBS}  ${OSX_FMWKS} )
		set_target_properties(${PLUGNAMEAAX} PROPERTIES COMPILE_DEFINITIONS "AAX_API=1")
	endif()
	
	if(WIN32)
	   set_target_properties(${PLUGNAME} PROPERTIES LINK_FLAGS_DEBUG "/SUBSYSTEM:WINDOWS")
	   set_target_properties(${PLUGNAME} PROPERTIES LINK_FLAGS_RELEASE "/SUBSYSTEM:WINDOWS")
	elseif(APPLE)
		if( DEFINED PLUGNAMEAU )
			add_library(${PLUGNAMEAU} SHARED ${${PN_SRC}} ${${PN_HDR}}  ${IPC_AU} )
			target_link_libraries(${PLUGNAMEAU} wdl lice iplug jnet eel plush rtam png zlib ${IPLUG_LIBS} ${OSX_FMWKS} )
			set_target_properties(${PLUGNAMEAU}  PROPERTIES COMPILE_DEFINITIONS "AU_API=1")
		endif()
	endif(WIN32)
endMACRO()

add_subdirectory(IPlugControls)
if(WIN32)
add_subdirectory(IPlugChunks)
add_subdirectory(IPlugConvoEngine)
add_subdirectory(IPlugDistortion)
add_subdirectory(IPlugEEL)
add_subdirectory(IPlugEffect)
add_subdirectory(IPlugGUIResize)
add_subdirectory(IPlugHostDetect)
add_subdirectory(IPlugMonoSynth)
add_subdirectory(IPlugMouseTest)
add_subdirectory(IPlugMultiChannel)
add_subdirectory(IPlugMultiTargets)
add_subdirectory(IPlugOpenGL)
add_subdirectory(IPlugPlush)
add_subdirectory(IPlugPolySynth)
add_subdirectory(IPlugResampler)
add_subdirectory(IPlugSideChain)
add_subdirectory(IPlugText)
endif()
